How To Attach And Mount An EBS Volume To EC2 Linux Instance?

Step 1: Head over to EC2 –> Volumes and create a new volume of your preferred size and type.

Step 2: Select the created volume, right click and select the “attach volume” option.

Step 3: Select the instance from the instance text box.

Step 4: Now, login to your ec2 instance and list the available disks using the following command 

lsblk

Use the lsblk command to view your available disk devices and their mount points (if applicable) 
to help you determine the correct device name to use. The output of lsblk removes the /dev/ prefix from full device paths.

Step 5: Check if the volume has any data using the following command.

sudo file -s /dev/xvdf

If the above command output shows “/dev/xvdf: data”, it means your volume is empty.

Step 6: Format the volume to ext4 filesystem  using the following command.

sudo mkfs -t ext4 /dev/xvdf

Step 7: Create a directory of your choice to mount our new ext4 volume. I am using the name “NewVolume”

Step 8: Mount the volume to “newvolume” directory using the following command.

sudo mount /dev/xvdf /NewVolume/

Step 9: cd into newvolume directory and check the disk space for confirming the volume mount.

cd /NewVolume
df -h 

The above command would show the free space in the newvolume directory.

To unmount the volume, you have to use the following command.

umount /dev/xvdf

How to EBS Automount On Reboot?

By default on every reboot the  EBS volumes other than root volume will get unmounted. To enable automount, you need to make an entry in the /etc/fstab file.

Step 1 : Back up the /etc/fstab file.

sudo cp /etc/fstab /etc/fstab.bak

Step 2: Open /etc/fstab file and make an entry in the following format.

device_name mount_point file_system_type fs_mntops fs_freq fs_passno

For example,

/dev/xvdf       /newvolume   ext4    defaults,nofail      

Step 3: Execute the following command to check id the fstab file has any error.

sudo mount -a

If the above command shows no error, it means your fstab entry is good.

Now, on every reboot the extra EBS volumes will get mounted automatically.

That’s how you mount and unmount EBS volumes in your ec2 instances. 

How to make the volume usable?

Before actually using this additional disk, you need to type a few commands. If you have no idea about file system management, 
simpliy copy and paste the following commands without thinking too much (adapted from AWS official guide)

- Create a file system (only needed for newly-created volumes):

$ sudo mkfs -t ext4 /dev/xvdf

- Mount it to a new directory (use any directory name you like):

$ mkdir new_disk

Then you should see the /dev/xvdf file system is mounted on the /home/ubuntu/new_disk directory

$ df -h
Filesystem      Size  Used Avail Use% Mounted on
udev            7.5G     0  7.5G   0% /dev
tmpfs           1.5G  8.6M  1.5G   1% /run
/dev/xvda1       68G   58G   11G  85% /
tmpfs           7.5G     0  7.5G   0% /dev/shm
tmpfs           5.0M     0  5.0M   0% /run/lock
tmpfs           7.5G     0  7.5G   0% /sys/fs/cgroup
tmpfs           1.5G  4.0K  1.5G   1% /run/user/1000
/dev/xvdf       197G   60M  187G   1% /home/ubuntu/new_disk

By default, the new directory belongs to the root user. Change the ownership so you don’t need root permission to access it:

$ sudo chown <newdirectorypath where volume is mounted>

Test if you can write files into that new disk:

$ touch new_disk/test_file
[no error occurs]


How do I set or change the root password for my EC2 Linux instance?
Issue
I can connect to my EC2 instance running Linux through SSH using my private key, and I can run privileged commands using sudo, but my instance doesn't have a root password. How do I get one?
Short Description
For security purposes, it's a best practice to avoid root passwords. To get a temporary root password to complete a task, follow these steps:

Grant a user root permissions, or assume root user permissions by running the sudo su command.
Manually create a password for the root user.
Complete the task.
Delete the password for the root user.
Resolution
Before creating a temporary password, be sure you understand the following:

By default, the sshd daemon is configured to refuse direct SSH connections by the root user. Avoid enabling direct SSH access for the root user. Instead, connect by using the user ID associated with your operating system, such as "ec2-user" for many Linux distributions, and a key pair.
When you launch an EC2 instance running Linux, you associate an SSH key pair with it, and then you use the private key to authenticate and log in to the instance by using SSH. The default user name for the instance depends on the OS. For example, use “centos” for CentOS, “ubuntu” for Ubuntu Linux, and "ec2-user” for most other Linux distributions.
After you log in using the user ID and password for your instance, you can run privileged commands using sudo as a prefix before each command, as shown in this example:
$ sudo mount /dev/sdf1/localfolder
To add a temporary password to a root user:

1.    Connect to your EC2 instance running Linux by using SSH.

2.    Assume root user permissions by running the following command:

$ sudo su
3.    Create a password for the root user by running the following command:

# passwd root 
4.    When prompted, enter your temporary root password, and then enter it again to confirm it.

Note: You must run this command as the root user.

After you complete the task, delete the root password by running the following command:

# passwd –d root



